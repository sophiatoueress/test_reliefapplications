import { NgZone } from '@angular/core';
import { ReplaySubject } from 'rxjs';
import { IPlayerApiScriptOptions, IPlayerOutputs, IPlayerSize } from './models';
import * as ɵngcc0 from '@angular/core';
export declare function win(): Window;
export declare function YouTubeRef(): any;
export declare function YouTubePlayerRef(): any;
export declare const defaultSizes: {
    height: number;
    width: number;
};
export declare class YoutubePlayerService {
    private zone;
    api: ReplaySubject<YT.Player>;
    private ytApiLoaded;
    constructor(zone: NgZone);
    loadPlayerApi(options: IPlayerApiScriptOptions): void;
    setupPlayer(elementId: string, outputs: IPlayerOutputs, sizes: IPlayerSize, videoId: string, playerVars: YT.PlayerVars): void;
    play(player: YT.Player): void;
    pause(player: YT.Player): void;
    playVideo(media: any, player: YT.Player): void;
    isPlaying(player: YT.Player): boolean;
    createPlayer(elementId: string, outputs: IPlayerOutputs, sizes: IPlayerSize, videoId?: string, playerVars?: YT.PlayerVars): any;
    toggleFullScreen(player: YT.Player, isFullScreen: boolean | null | undefined): void;
    generateUniqueId(): string;
    private createApi;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<YoutubePlayerService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<YoutubePlayerService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXlvdXR1YmUtcGxheWVyLnNlcnZpY2UuZC50cyIsInNvdXJjZXMiOlsibmd4LXlvdXR1YmUtcGxheWVyLnNlcnZpY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSZXBsYXlTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBJUGxheWVyQXBpU2NyaXB0T3B0aW9ucywgSVBsYXllck91dHB1dHMsIElQbGF5ZXJTaXplIH0gZnJvbSAnLi9tb2RlbHMnO1xuZXhwb3J0IGRlY2xhcmUgZnVuY3Rpb24gd2luKCk6IFdpbmRvdztcbmV4cG9ydCBkZWNsYXJlIGZ1bmN0aW9uIFlvdVR1YmVSZWYoKTogYW55O1xuZXhwb3J0IGRlY2xhcmUgZnVuY3Rpb24gWW91VHViZVBsYXllclJlZigpOiBhbnk7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBkZWZhdWx0U2l6ZXM6IHtcbiAgICBoZWlnaHQ6IG51bWJlcjtcbiAgICB3aWR0aDogbnVtYmVyO1xufTtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFlvdXR1YmVQbGF5ZXJTZXJ2aWNlIHtcbiAgICBwcml2YXRlIHpvbmU7XG4gICAgYXBpOiBSZXBsYXlTdWJqZWN0PFlULlBsYXllcj47XG4gICAgcHJpdmF0ZSB5dEFwaUxvYWRlZDtcbiAgICBjb25zdHJ1Y3Rvcih6b25lOiBOZ1pvbmUpO1xuICAgIGxvYWRQbGF5ZXJBcGkob3B0aW9uczogSVBsYXllckFwaVNjcmlwdE9wdGlvbnMpOiB2b2lkO1xuICAgIHNldHVwUGxheWVyKGVsZW1lbnRJZDogc3RyaW5nLCBvdXRwdXRzOiBJUGxheWVyT3V0cHV0cywgc2l6ZXM6IElQbGF5ZXJTaXplLCB2aWRlb0lkOiBzdHJpbmcsIHBsYXllclZhcnM6IFlULlBsYXllclZhcnMpOiB2b2lkO1xuICAgIHBsYXkocGxheWVyOiBZVC5QbGF5ZXIpOiB2b2lkO1xuICAgIHBhdXNlKHBsYXllcjogWVQuUGxheWVyKTogdm9pZDtcbiAgICBwbGF5VmlkZW8obWVkaWE6IGFueSwgcGxheWVyOiBZVC5QbGF5ZXIpOiB2b2lkO1xuICAgIGlzUGxheWluZyhwbGF5ZXI6IFlULlBsYXllcik6IGJvb2xlYW47XG4gICAgY3JlYXRlUGxheWVyKGVsZW1lbnRJZDogc3RyaW5nLCBvdXRwdXRzOiBJUGxheWVyT3V0cHV0cywgc2l6ZXM6IElQbGF5ZXJTaXplLCB2aWRlb0lkPzogc3RyaW5nLCBwbGF5ZXJWYXJzPzogWVQuUGxheWVyVmFycyk6IGFueTtcbiAgICB0b2dnbGVGdWxsU2NyZWVuKHBsYXllcjogWVQuUGxheWVyLCBpc0Z1bGxTY3JlZW46IGJvb2xlYW4gfCBudWxsIHwgdW5kZWZpbmVkKTogdm9pZDtcbiAgICBnZW5lcmF0ZVVuaXF1ZUlkKCk6IHN0cmluZztcbiAgICBwcml2YXRlIGNyZWF0ZUFwaTtcbn1cbiJdfQ==